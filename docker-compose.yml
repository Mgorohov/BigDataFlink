#version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - flink-network

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR:
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - flink-network

  postgres:
    image: postgres:13
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: flinkuser
      POSTGRES_PASSWORD: flinkpassword
      POSTGRES_DB: flinkdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_init_scripts:/docker-entrypoint-initdb.d 
    networks:
      - flink-network

  jobmanager:
    image: flink:1.17-scala_2.12-java11
    hostname: jobmanager
    container_name: jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./flink_sql_job:/opt/flink/sql_job
      - ./flink_jars:/opt/flink/usrlib
    networks:
      - flink-network
    depends_on:
      - kafka
      - postgres

  taskmanager:
    image: flink:1.17-scala_2.12-java11
    hostname: taskmanager
    container_name: taskmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./flink_sql_job:/opt/flink/sql_job
      - ./flink_jars:/opt/flink/usrlib
    networks:
      - flink-network
    depends_on:
      - jobmanager

  producer:
    build:
      context: ./csv_to_kafka_producer
    container_name: csv_producer
    volumes:
      - ./mock_data:/app/mock_data
    depends_on:
      - kafka
    networks:
      - flink-network
    profiles:
      - producer_runner

volumes:
  postgres_data:

networks:
  flink-network:
    driver: bridge